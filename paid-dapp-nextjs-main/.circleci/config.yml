version: 2.1
orbs:
  gcp-gcr: circleci/gcp-gcr@0.8.0
  gcp-gke: circleci/gcp-gke@1.1.0
  sonarcloud: sonarsource/sonarcloud@1.0.2
  slack: circleci/slack@3.4.2
jobs:
  build-dev:
    machine:
      image: ubuntu-1604:202007-01
      docker_layer_caching: true
    steps:
      - checkout
      - run: docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASS
      - run:
          name: Replace the backslash for a hyphen if the CIRCLE_BRANCH is a feature, release or hotfix branch.
          command: |
            echo "export CIRCLE_BRANCH=$( echo ${CIRCLE_BRANCH} | sed 's_/_-_' )" >> $BASH_ENV
      - gcp-gcr/build-image:
          image: $CIRCLE_PROJECT_REPONAME
          extra_build_args: "--target build
            --build-arg=NEXT_PUBLIC_CONTRACT_ANCHORINNG_ADDRESS=${NEXT_PUBLIC_CONTRACT_ANCHORINNG_ADDRESS_DEV}
            --build-arg=NEXT_PUBLIC_CONTRACT_ESCROW_ADDRESS=${NEXT_PUBLIC_CONTRACT_ESCROW_ADDRESS_DEV}
            --build-arg=NEXT_PUBLIC_CONTRACT_PAID_TOKEN_ADDRESS=${NEXT_PUBLIC_CONTRACT_PAID_TOKEN_ADDRESS_DEV}
            --build-arg=NEXT_PUBLIC_CHAIN_ID=${NEXT_PUBLIC_CHAIN_ID_DEV}
            --build-arg=NEXT_PUBLIC_CONTRACT_ETH_ADDRESS=${NEXT_PUBLIC_CONTRACT_ETH_ADDRESS_DEV}
            --build-arg=NEXT_PUBLIC_CONTRACT_ETH_ESCROW_ADDRESS=${NEXT_PUBLIC_CONTRACT_ETH_ESCROW_ADDRESS_DEV}
            --build-arg=NEXT_PUBLIC_CONTRACT_ETH_PAID_TOKEN_ADDRESS=${NEXT_PUBLIC_CONTRACT_ETH_PAID_TOKEN_ADDRESS_DEV}
            --build-arg=NEXT_PUBLIC_IPFS_FILES_URL=${NEXT_PUBLIC_IPFS_FILES_URL_DEV}
            --build-arg=NEXT_PUBLIC_MAGIC_API_KEY=${NEXT_PUBLIC_MAGIC_API_KEY_DEV}
            --build-arg=NEXT_PUBLIC_API_BACKEND_URL=${NEXT_PUBLIC_API_BACKEND_URL_DEV}"
          tag: "$CIRCLE_BRANCH-$CIRCLE_SHA1"
      - slack/status:
          fail_only: true

  build-prod:
    machine:
      image: ubuntu-1604:202007-01
      docker_layer_caching: true
    steps:
      - checkout
      - run: docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASS
      - run:
          name: Replace the backslash for a hyphen if the CIRCLE_BRANCH is a feature, release or hotfix branch.
          command: |
            echo "export CIRCLE_BRANCH=$( echo ${CIRCLE_BRANCH} | sed 's_/_-_' )" >> $BASH_ENV
      - gcp-gcr/build-image:
          image: $CIRCLE_PROJECT_REPONAME
          extra_build_args: "--target build
            --build-arg=NEXT_PUBLIC_CONTRACT_ANCHORINNG_ADDRESS=${NEXT_PUBLIC_CONTRACT_ANCHORINNG_ADDRESS_PROD}
            --build-arg=NEXT_PUBLIC_CONTRACT_ESCROW_ADDRESS=${NEXT_PUBLIC_CONTRACT_ESCROW_ADDRESS_PROD}
            --build-arg=NEXT_PUBLIC_CONTRACT_PAID_TOKEN_ADDRESS=${NEXT_PUBLIC_CONTRACT_PAID_TOKEN_ADDRESS_PROD}
            --build-arg=NEXT_PUBLIC_CONTRACT_ETH_ADDRESS=${NEXT_PUBLIC_CONTRACT_ETH_ADDRESS_PROD}
            --build-arg=NEXT_PUBLIC_CONTRACT_ETH_ESCROW_ADDRESS=${NEXT_PUBLIC_CONTRACT_ETH_ESCROW_ADDRESS_PROD}
            --build-arg=NEXT_PUBLIC_CONTRACT_ETH_PAID_TOKEN_ADDRESS=${NEXT_PUBLIC_CONTRACT_ETH_PAID_TOKEN_ADDRESS_PROD}
            --build-arg=NEXT_PUBLIC_IPFS_FILES_URL=${NEXT_PUBLIC_IPFS_FILES_URL_PROD}
            --build-arg=NEXT_PUBLIC_MAGIC_API_KEY=${NEXT_PUBLIC_MAGIC_API_KEY_PROD}
            --build-arg=NEXT_PUBLIC_API_BACKEND_URL=${NEXT_PUBLIC_API_BACKEND_URL_PROD}"
          tag: "$CIRCLE_BRANCH-$CIRCLE_SHA1"
      - slack/status:
          fail_only: true


  # code-scan:
  #   docker:
  #     - image: "node:14.15.1"
  #       auth:
  #         username: $DOCKERHUB_USER
  #         password: $DOCKERHUB_PASS
  #   steps:
  #     - checkout
  #     - sonarcloud/scan

  publish-dev:
    machine:
      image: ubuntu-1604:202007-01
      docker_layer_caching: true
    steps:
      - checkout
      - run: docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASS
      - run:
          name: Replace the backslash for a hyphen if the CIRCLE_BRANCH is a feature, release or hotfix branch.
          command: |
            echo "export CIRCLE_BRANCH=$( echo ${CIRCLE_BRANCH} | sed 's_/_-_' )" >> $BASH_ENV
      - gcp-gcr/build-image:
          image: "$CIRCLE_PROJECT_REPONAME"
          extra_build_args: "--target production
            --build-arg=NEXT_PUBLIC_CONTRACT_ANCHORINNG_ADDRESS=${NEXT_PUBLIC_CONTRACT_ANCHORINNG_ADDRESS_DEV}
            --build-arg=NEXT_PUBLIC_CONTRACT_ESCROW_ADDRESS=${NEXT_PUBLIC_CONTRACT_ESCROW_ADDRESS_DEV}
            --build-arg=NEXT_PUBLIC_CONTRACT_PAID_TOKEN_ADDRESS=${NEXT_PUBLIC_CONTRACT_PAID_TOKEN_ADDRESS_DEV}
            --build-arg=NEXT_PUBLIC_CHAIN_ID=${NEXT_PUBLIC_CHAIN_ID_DEV}
            --build-arg=NEXT_PUBLIC_CONTRACT_ETH_ADDRESS=${NEXT_PUBLIC_CONTRACT_ETH_ADDRESS_DEV}
            --build-arg=NEXT_PUBLIC_CONTRACT_ETH_ESCROW_ADDRESS=${NEXT_PUBLIC_CONTRACT_ETH_ESCROW_ADDRESS_DEV}
            --build-arg=NEXT_PUBLIC_CONTRACT_ETH_PAID_TOKEN_ADDRESS=${NEXT_PUBLIC_CONTRACT_ETH_PAID_TOKEN_ADDRESS_DEV}
            --build-arg=NEXT_PUBLIC_IPFS_FILES_URL=${NEXT_PUBLIC_IPFS_FILES_URL_DEV}
            --build-arg=NEXT_PUBLIC_MAGIC_API_KEY=${NEXT_PUBLIC_MAGIC_API_KEY_DEV}
            --build-arg=NEXT_PUBLIC_API_BACKEND_URL=${NEXT_PUBLIC_API_BACKEND_URL_DEV}"
          tag: "$CIRCLE_BRANCH-$CIRCLE_SHA1"
      - gcp-gcr/gcr-auth
      - gcp-gcr/push-image:
          image: $CIRCLE_PROJECT_REPONAME
          tag: $CIRCLE_BRANCH-$CIRCLE_SHA1
      - gcp-gcr/tag-image:
          image: $CIRCLE_PROJECT_REPONAME
          source-tag: $CIRCLE_BRANCH-$CIRCLE_SHA1
          target-tag: $CIRCLE_BRANCH-latest
      - slack/status:
          fail_only: true

  publish-prod:
    machine:
      image: ubuntu-1604:202007-01
      docker_layer_caching: true
    steps:
      - checkout
      - run: docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASS
      - run:
          name: Replace the backslash for a hyphen if the CIRCLE_BRANCH is a feature, release or hotfix branch.
          command: |
            echo "export CIRCLE_BRANCH=$( echo ${CIRCLE_BRANCH} | sed 's_/_-_' )" >> $BASH_ENV
      - gcp-gcr/build-image:
          image: "$CIRCLE_PROJECT_REPONAME"
          extra_build_args: "--target production
            --build-arg=NEXT_PUBLIC_CONTRACT_ANCHORINNG_ADDRESS=${NEXT_PUBLIC_CONTRACT_ANCHORINNG_ADDRESS_PROD}
            --build-arg=NEXT_PUBLIC_CONTRACT_ESCROW_ADDRESS=${NEXT_PUBLIC_CONTRACT_ESCROW_ADDRESS_PROD}
            --build-arg=NEXT_PUBLIC_CONTRACT_PAID_TOKEN_ADDRESS=${NEXT_PUBLIC_CONTRACT_PAID_TOKEN_ADDRESS_PROD}
            --build-arg=NEXT_PUBLIC_CONTRACT_ETH_ADDRESS=${NEXT_PUBLIC_CONTRACT_ETH_ADDRESS_PROD}
            --build-arg=NEXT_PUBLIC_CONTRACT_ETH_ESCROW_ADDRESS=${NEXT_PUBLIC_CONTRACT_ETH_ESCROW_ADDRESS_PROD}
            --build-arg=NEXT_PUBLIC_CONTRACT_ETH_PAID_TOKEN_ADDRESS=${NEXT_PUBLIC_CONTRACT_ETH_PAID_TOKEN_ADDRESS_PROD}
            --build-arg=NEXT_PUBLIC_IPFS_FILES_URL=${NEXT_PUBLIC_IPFS_FILES_URL_PROD}
            --build-arg=NEXT_PUBLIC_MAGIC_API_KEY=${NEXT_PUBLIC_MAGIC_API_KEY_PROD}
            --build-arg=NEXT_PUBLIC_API_BACKEND_URL=${NEXT_PUBLIC_API_BACKEND_URL_PROD}"
          tag: "$CIRCLE_BRANCH-$CIRCLE_SHA1"
      - gcp-gcr/gcr-auth
      - gcp-gcr/push-image:
          image: $CIRCLE_PROJECT_REPONAME
          tag: $CIRCLE_BRANCH-$CIRCLE_SHA1
      - gcp-gcr/tag-image:
          image: $CIRCLE_PROJECT_REPONAME
          source-tag: $CIRCLE_BRANCH-$CIRCLE_SHA1
          target-tag: $CIRCLE_BRANCH-latest
      - slack/status:
          fail_only: true

  deploy-dev:
    machine:
      image: ubuntu-1604:202007-01
      docker_layer_caching: true
    steps:
      - run:
          name: Replace the backslash for a hyphen if the CIRCLE_BRANCH is a feature, release or hotfix branch.
          command: |
            echo "export CIRCLE_BRANCH=$( echo ${CIRCLE_BRANCH} | sed 's_/_-_' )" >> $BASH_ENV
      - gcp-gke/install
      - gcp-gke/update-kubeconfig-with-credentials:
          cluster: $GKE_CLUSTER
          perform-login: true
      - gcp-gke/rollout-image:
          cluster: $GKE_CLUSTER
          deployment: $CIRCLE_PROJECT_REPONAME
          container: dapp
          image: gcr.io/$GOOGLE_PROJECT_ID/$CIRCLE_PROJECT_REPONAME
          tag: "$CIRCLE_BRANCH-$CIRCLE_SHA1"
      - slack/status

  deploy-prod:
    machine:
      image: ubuntu-1604:202007-01
      docker_layer_caching: true
    steps:
      - gcp-gke/install
      - gcp-gke/update-kubeconfig-with-credentials:
          cluster: $GKE_CLUSTER
          perform-login: true
      - gcp-gke/rollout-image:
          cluster: $GKE_CLUSTER
          deployment: $CIRCLE_PROJECT_REPONAME
          container: dapp
          image: gcr.io/$GOOGLE_PROJECT_ID/$CIRCLE_PROJECT_REPONAME
          tag: "$CIRCLE_BRANCH-$CIRCLE_SHA1"
      - slack/status

workflows:
  version: 2
  build-test-and-approval-deploy:
    jobs:
      - build-dev:
          filters:
            branches:
              only:
                - /^feature.*/
                - /^release.*/
                - /^hotfix.*/
          context:
            - paid-gcp
            - docker-hub-creds
      - build-prod:
          filters:
            branches:
              only:
                - main
          context:
            - paid-gcp
            - docker-hub-creds
      # - code-scan:
      #     filters:
      #       branches:
      #         only:
               # - main
               # - /^feature.*/
               # - /^release.*/
               # - /^hotfix.*/
          # context:
          #   - paid-sonarcloud
          #   - docker-hub-creds
      - publish-dev:
          requires:
            - build-dev
          filters:
            branches:
              only:
                - /^feature.*/
                - /^release.*/
                - /^hotfix.*/
          context:
            - paid-gcp
            - docker-hub-creds
      - publish-prod:
          requires:
            - build-prod
          filters:
            branches:
              only:
                - main
          context:
            - paid-gcp
            - docker-hub-creds
      - slack/approval-notification:
          filters:
            branches:
              only:
                - main
                - /^feature.*/
                - /^release.*/
                - /^hotfix.*/
          requires:
            - publish-dev
            - publish-prod
      - hold-deploy:
          type: approval
          filters:
            branches:
              only:
                - main
                - /^feature.*/
                - /^release.*/
                - /^hotfix.*/
          requires:
            - publish-dev
            - publish-prod
      - deploy-dev:
          requires:
            - hold-deploy
          filters:
            branches:
              only:
                - /^feature.*/
                - /^release.*/
                - /^hotfix.*/
          context:
            - paid-gcp
            - paid-gcp-dev
      - deploy-prod:
          requires:
            - hold-deploy
          filters:
            branches:
              only:
                - main
          context:
            - paid-gcp
            - paid-gcp-prod
